{"version":3,"sources":["markdown/roma.md","markdown/images/designscene.JPG","markdown/images/screenshot.png","markdown/images/workflow.png","markdown/images/stack.svg","markdown/images/tree.svg","markdown/images/ring.svg","markdown/images/roma_labels.png","markdown/images/entire_set.png","markdown/images/icons.svg","markdown/images/ar_interaction.jpg","markdown/images/team.jpg","markdown/crochetmatic.md","markdown/images/crochetmatic.png","markdown/images/full-view.svg","markdown/images/voxel-single.jpg","markdown/images/basic.png","markdown/images/voxel-double.jpg","markdown/images/junction.png","markdown/images/single_layer.gif","markdown/images/multiple_layers.gif","markdown/images/real_prism.jpg","markdown/images/part-overview.svg","markdown/images/computer_sim.gif","markdown/images/first_version.svg","markdown/images/next_version.svg","markdown/images/final_version.svg","markdown/images/needle-parts.svg","markdown/images/loop-by-hand.gif","markdown/images/steps.svg","markdown/images/row.gif","markdown/images/CAM-trace.gif","markdown/images/scarf.png","markdown/distopia.md","markdown/transform.md","markdown/images/transFORM.jpg","markdown/polybrick.md","components/skeleton.jsx","components/titlePiece.jsx","components/pageView.jsx","pages/home.jsx","components/navbar.jsx","components/project.jsx","pages/research.jsx","pages/designs.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","titleCard","marginTop","Column","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","width","stringToNum","offset","title","style","inherits","createClass","key","value","w","a","react_default","createElement","className","children","React","Component","Container","_React$Component2","apply","arguments","Row","_React$Component3","Tile","project","projects","side","background","color","img","backgroundSize","Link","to","link","skeleton_Column","sub","roma","crochetmatic","distopia","transform","polybrick","cuberpillar","ocularmd","ciac","lcl","cornellems","Page","Home","skeleton_Container","pageView","skeleton_Row","href","react_responsive_default","minWidth","titlePiece","maxWidth","Navbar","class","Project","navbar","require","RoMA","esm","CrochetMatic","Distopia","TransForm","Polybrick","Cuberpillar","mdFile","OcularMD","CIAC","LCL","CUEMS","App","BrowserRouter","Route","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.862ee359.chunk.js","sourcesContent":["module.exports = \"<h3 id=\\\"roma-interactive-fabrication-with-a-robotic-3d-printer\\\">RoMA: Interactive Fabrication with a Robotic 3D Printer</h3>\\n<h6 id=\\\"january-2017-september-2017\\\">January 2017 - September 2017</h6>\\n<span style=\\\"display:block;text-align:center\\\">\\n<img src=\\\"\" + require(\"./images/designscene.JPG\") + \"\\\" alt=\\\"That's me in that pic\\\" width=\\\"75%\\\" style=\\\"margin: 0 auto\\\"/>\\n*That's me in the pic!*\\n</span>\\n\\n<h5 id=\\\"authors-huaishu-peng-jimmy-briggs-cheng-yao-wang-kevin-guo-joseph-kider-stefanie-mueller-patrick-baudisch-fran-ois-guimbreti-re\\\">Authors: Huaishu Peng, Jimmy Briggs, Cheng-Yao Wang, <strong>Kevin Guo</strong>, Joseph Kider, Stefanie Mueller, Patrick Baudisch, François Guimbretière</h5>\\n<h5 id=\\\"2018-conference-on-human-factors-in-computing-systems-chi-2018-\\\">2018 Conference on Human Factors in Computing Systems <strong>(CHI 2018)</strong></h5>\\n<p><a href=\\\"http://www.huaishu.me/projects/roma.pdf\\\">Read the Paper here</a></p>\\n<span style=\\\"display:block;text-align:center\\\">\\n<iframe width=\\\"720\\\" height=\\\"405\\\" src=\\\"https://www.youtube.com/embed/K_wWuYD1Fkg\\\" frameborder=\\\"0\\\" allow=\\\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe>\\n</span>\\n\\n<h3 id=\\\"abstract\\\">Abstract</h3>\\n<p>We present the Robotic Modeling Assistant (RoMA), an interactive fabrication system providing a fast, precise, hands-on and in-situ modeling experience. As a designer creates a new model using RoMA AR CAD editor, features are constructed concurrently by a 3D printing robotic arm sharing the same design volume. The partially printed physical model then serves as a tangible reference for the designer as she adds new elements to her design. RoMA's proxemics-inspired handshake mechanism between the designer and the 3D printing robotic arm allows the designer to quickly interrupt printing to access a printed area or to indicate that the robot can take full control of the model to finish printing. RoMA lets users integrate real-world constraints into a design rapidly, allowing them to create well-proportioned tangible artifacts or to extend existing objects. We conclude by presenting the strengths and limitations of our current design.</p>\\n<h3 id=\\\"ui-ux\\\">UI/UX</h3>\\n<p>My main role within the project was designing and implementing the interface for the augmented reality CAD editor. The main UI element in the program was the marking menu, which allowed users to select a drawing operation from the controller. Clicking the joystick would open the menu and the user would be able to select a menu item simply by moving the joystick to the sector of the menu and clicking or holding the joystick in that position.</p>\\n<p>The process of making an object in almost every CAD program starts off very similar to the screenshot below...</p>\\n<span style=\\\"display:block;text-align:center\\\">\\n<img src=\\\"\" + require(\"./images/screenshot.png\") + \"\\\" alt=\\\"Solidworks\\\" width=\\\"75%\\\" style=\\\"margin: 0 auto\\\"/>\\n*What a 2D sketch looks like on Solidworks, an existing CAD application*\\n</span>\\n\\n<p>...as a flat 2D drawing. While this is great for precise shapes on blank backgrounds with experienced users on a flat screen, it wouldn't make much sense in an AR environment with users who weren't entirely familiar with modeling software. </p>\\n<p>I proposed a hybrid system, in which the user would point and &quot;project&quot; a 2D element such as a curve or a line or a point onto a selected plane. Below is the 4 page storyboard I made of a user creating an airplane using the hybrid system in RoMA.</p>\\n<span style=\\\"display:block;text-align:center\\\">\\n<img src=\\\"\" + require(\"./images/workflow.png\") + \"\\\" alt=\\\"workflow\\\" width=\\\"85%\\\" style=\\\"margin: 0 auto\\\"/>\\n*My initial idea for a workflow, which borrowed heavily from the 2D sketching framework I knew from being a Solidworks user*\\n</span>\\n\\n<p>While it could work, after some discussion with the rest of the team, I realized that such a system wouldn't take full advantage of working in AR. We came to a compromise, drawing elements free floating in 3D space with the exception of certain actions that required elements to be defined by a plane or a surface (such as rotation or lofting).</p>\\n<p>I proposed 3 menu interaction schemes and made interactive Javascript prototypes to demonstrate them in Framer (all three prototypes are below).</p>\\n<div class=\\\"row\\\">\\n    <div class=\\\"four columns\\\" style=\\\"display:block;text-align:center\\\">\\n        <h4>Stack Menu</h4>\\n        <img src=\\\"\" + require(\"./images/stack.svg\") + \"\\\" alt=\\\"AR Interactions\\\" width=\\\"50%\\\" style=\\\"margin: 0 auto\\\"><img/>\\n    </div>\\n    <div class=\\\"four columns\\\" style=\\\"display:block;text-align:center\\\">\\n        <h4>Tree Menu</h4>\\n        <img src=\\\"\" + require(\"./images/tree.svg\") + \"\\\" alt=\\\"AR Interactions\\\" width=\\\"50%\\\" style=\\\"margin: 0 auto\\\"><img/>\\n    </div>\\n    <div class=\\\"four columns\\\" style=\\\"display:block;text-align:center\\\">\\n        <h4>Ring Menu</h4>\\n        <img src=\\\"\" + require(\"./images/ring.svg\") + \"\\\" alt=\\\"AR Interactions\\\" width=\\\"50%\\\" style=\\\"margin: 0 auto\\\"><img/>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"four columns\\\" style=\\\"display:block;text-align:center; height:350px; overflow:hidden; margin-bottom: 2em\\\">\\n        <iframe class=\\\"framer\\\" src=\\\"https://framer.cloud/ilfyY/\\\" width=\\\"600\\\" height=\\\"900\\\" style=\\\"display:block;transform:scale(0.5);transform-origin: top left; border:none\\\"></iframe>\\n    </div>\\n    <div class=\\\"four columns\\\" style=\\\"display:block;text-align:center; height:350px; overflow:hidden; margin-bottom: 2em\\\">\\n        <iframe class=\\\"framer\\\" src=\\\"https://framer.cloud/agbTc/\\\" width=\\\"600\\\" height=\\\"900\\\" style=\\\"display:block;transform:scale(0.5);transform-origin: top left; border:none;\\\"></iframe>\\n    </div>\\n    <div class=\\\"four columns\\\" style=\\\"display:block;text-align:center; height:350px; overflow:hidden; margin-bottom: 2em\\\">\\n        <iframe class=\\\"framer\\\" src=\\\"https://framer.cloud/HcxQi/\\\" width=\\\"600\\\" height=\\\"900\\\" style=\\\"display:block;transform:scale(0.5);transform-origin: top left;border:none\\\"></iframe>\\n    </div>\\n</div>\\n\\n<p>The stack menu was chosen as the menu because it was the easiest to implement, didn't clutter up too much of the user's field of view, and conformed more directly to the user's actions. However, I realized pretty early on that the stack menu's design made it hard to remember what action was chosen and what you had to do to complete the task. To aid with that, I used the blank space in the middle of the menu as a reminder of why an item or action needed to be selected (shown below).</p>\\n<span style=\\\"display:block;text-align:center\\\">\\n<img src=\\\"\" + require(\"./images/roma_labels.png\") + \"\\\" alt=\\\"Label\\\" width=\\\"50%\\\" style=\\\"margin: 0 auto\\\"/>\\n*The Logical Structure of the Marking Menu*\\n</span>\\n\\n<p>I had to make one for every action and as you can see below...</p>\\n<span style=\\\"display:block;text-align:center\\\">\\n<img src=\\\"\" + require(\"./images/entire_set.png\") + \"\\\" alt=\\\"Label\\\" width=\\\"50%\\\" style=\\\"margin: 0 auto\\\"/>\\n*These were about as annoying to make as it seems it would*\\n</span>\\n\\n<p>...there were a lot of them. Along with the menus, I created a whole new set of icons for RoMA.</p>\\n<span style=\\\"display:block;text-align:center\\\">\\n<img src=\\\"\" + require(\"./images/icons.svg\") + \"\\\" alt=\\\"Label\\\" width=\\\"75%\\\" style=\\\"margin: 0 auto\\\"/>\\n*An entirely new set of icons for RoMA*\\n</span>\\n\\n<p>After wrangling with a custom C# engine specifically for RoMA <a href=\\\"http://jimmybriggs.net/\\\">(courtesy from the talented Jimmy Briggs)</a>, my marking menu eventually was integrated with the system and was demoed for interested researchers and designers alike.</p>\\n<span style=\\\"display:block;text-align:center\\\">\\n<img src=\\\"\" + require(\"./images/ar_interaction.jpg\") + \"\\\" alt=\\\"AR Interactions\\\" width=\\\"85%\\\" style=\\\"margin: 0 auto\\\"/>\\n*Marking menu in action in the AR CAD editor*\\n</span>\\n\\n<span style=\\\"display:block;text-align:center\\\">\\n<img src=\\\"\" + require(\"./images/team.jpg\") + \"\\\" alt=\\\"The Team\\\" width=\\\"85%\\\" style=\\\"margin: 0 auto\\\"/>\\n*(From left to right) Huaishu Peng, Eric (Cheng-Yao) Wang, Me (Kevin Guo), & Jimmy Briggs. The best team I could ask for.*\\n</span>\\n\";","module.exports = __webpack_public_path__ + \"static/media/designscene.d735447f.JPG\";","module.exports = __webpack_public_path__ + \"static/media/screenshot.7b0274c2.png\";","module.exports = __webpack_public_path__ + \"static/media/workflow.92ac1883.png\";","module.exports = __webpack_public_path__ + \"static/media/stack.0c7c5e76.svg\";","module.exports = __webpack_public_path__ + \"static/media/tree.1b3953e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/ring.23743f56.svg\";","module.exports = __webpack_public_path__ + \"static/media/roma_labels.258a638c.png\";","module.exports = __webpack_public_path__ + \"static/media/entire_set.207bfff3.png\";","module.exports = __webpack_public_path__ + \"static/media/icons.3993ecea.svg\";","module.exports = __webpack_public_path__ + \"static/media/ar_interaction.9b8cb16c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/team.034a7500.jpg\";","module.exports = \"<h3 id=\\\"crochetmatic-volumetric-3d-knitting\\\">CrochetMatic: Volumetric 3D Knitting</h3>\\n<h6 id=\\\"may-2017-may-2018\\\">May 2017 - May 2018</h6>\\n<h5 id=\\\"people-kevin-guo-olav-imsdahl-fran-ois-guimbreti-re-scott-hudson\\\">People: <strong>Kevin Guo</strong>, Olav Imsdahl, François Guimbretière, Scott Hudson</h5>\\n<div class=\\\"row\\\">\\n    <div class=\\\"six columns\\\" style=\\\"display:block;text-align:center\\\">\\n        <img src=\\\"\" + require(\"./images/crochetmatic.png\") + \"\\\" alt=\\\"Crochetmatic\\\" width=\\\"100%\\\" style=\\\"margin: 0 auto\\\"/>\\n    </div>\\n    <div class=\\\"six columns\\\" style=\\\"display:block;text-align:center\\\">\\n        <img src=\\\"\" + require(\"./images/full-view.svg\") + \"\\\" alt=\\\"That's me in that pic\\\" width=\\\"100%\\\" style=\\\"margin: 0 auto\\\"/>\\n    </div>\\n</div>\\n\\n<p>I worked on CrochetMatic during my time at <a href=\\\"https://www.cs.cornell.edu/~francois/\\\">Prof. François Guimbretière</a>'s Design Lab. CrochetMatic was easily one of the most time-consuming and difficult projects. While I didn't reach the ultimate goal, I believe that I learned an immense amount from my struggles with this project.</p>\\n<h3 id=\\\"the-start\\\">The Start</h3>\\n<p>The initial idea was to build a machine that could build knitted objects the same way 3D printers build their prints: additive and layer-by-layer. But while plastic has relatively predictable properties and can be put through an extruder, a length of yarn's properties can change from bundle to bundle. Also, it can get caught on small mechanisms which makes it hard to build around. Furthermore, the idea of knitting entire 3D volumes (both the exterior and interior), whether by hand or machine had never really been tried before. The closest antecedent to the project was <a href=\\\"https://www.disneyresearch.com/publication/machine-knitting-compiler/\\\">a 3D knitting compiler</a> from Carnegie Mellon University but even that knitting compiler only created knitted tubes that had to be filled afterwards.</p>\\n<p>At the suggestion of <a href=\\\"http://www.cs.cornell.edu/~srm/\\\">Prof. Steve Marschner</a>, the preeminent computer graphics professor at Cornell (he won an Oscar for his CG research), the individual knits were throught of as a series of voxels, or volumes in a 3D grid. This was coming off of his previous work simulating knit clothes <a href=\\\"http://www.cs.cornell.edu/projects/YarnCloth/\\\">(more details here.)</a></p>\\n<h3 id=\\\"simulations\\\">Simulations</h3>\\n<p>After spending the first two weeks of summer learning how to knit, I learned that the knits followed a regular pattern and that the best way to make a &quot;layer&quot; of knits was to spiral outwards in with a series of concentric layers. Each individual layer would be independent of the ones inside and outside of it except for &quot;linking&quot; knits that connected that layer to the one outside of it. I ended up building computer models in Fusion360 of each type of knit that would conform to the voxels.</p>\\n<div class=\\\"row\\\">\\n    <div class=\\\"six columns\\\" style=\\\"display:block;text-align:center\\\">\\n        <span style=\\\"display:block;text-align:center\\\">\\n        <img src=\\\"\" + require(\"./images/voxel-single.jpg\") + \"\\\" alt=\\\"Basic\\\" width=\\\"75%\\\" style=\\\"margin: 0 auto\\\"/>\\n        *Initial observation sketch of a unit voxel*\\n        </span>\\n        <span style=\\\"display:block;text-align:center\\\">\\n        <img src=\\\"\" + require(\"./images/basic.png\") + \"\\\" alt=\\\"Basic\\\" width=\\\"75%\\\" style=\\\"margin: 0 auto\\\"/>\\n        *Final modeled basic knit voxel*\\n        </span>\\n    </div>\\n    <div class=\\\"six columns\\\" style=\\\"display:block;text-align:center\\\">\\n        <span style=\\\"display:block;text-align:center\\\">\\n        <img src=\\\"\" + require(\"./images/voxel-double.jpg\") + \"\\\" alt=\\\"Basic\\\" width=\\\"75%\\\" style=\\\"margin: 0 auto\\\"/>\\n        *Initial observation sketch of a junction voxel*\\n        </span>\\n        <span style=\\\"display:block;text-align:center\\\">\\n        <img src=\\\"\" + require(\"./images/junction.png\") + \"\\\" alt=\\\"Junction\\\" width=\\\"75%\\\" style=\\\"margin: 0 auto\\\"/>\\n        *Final modeled junction knit voxels*\\n        </span>\\n    </div>\\n</div>\\n\\n<p>Each knit followed a path of points, which I was able to export and joint together to form a single &quot;strand&quot; of points. This strand was inputted into a modified version of a <a href=\\\"https://www.cs.cornell.edu/projects/rodsound/\\\">C++ rod simulator</a> developed by one of Prof. Marschner's PhDs <a href=\\\"https://www.cs.cornell.edu/~ers/\\\">Eston</a>. Each simulation, even though only one second long, required hours of computation, a couple took over 24 hours. But in the end, we got the results: </p>\\n<div class=\\\"row\\\">\\n    <div class=\\\"six columns\\\" style=\\\"display:block;text-align:center\\\">\\n        <span style=\\\"display:block;text-align:center\\\">\\n        <img src=\\\"\" + require(\"./images/single_layer.gif\") + \"\\\" alt=\\\"single\\\" width=\\\"100%\\\" style=\\\"margin: 0 auto\\\"/>\\n        *Simulating a single layer*\\n        </span>\\n    </div>\\n    <div class=\\\"six columns\\\" style=\\\"display:block;text-align:center\\\">\\n        <span style=\\\"display:block;text-align:center\\\">\\n        <img src=\\\"\" + require(\"./images/multiple_layers.gif\") + \"\\\" alt=\\\"multiple\\\" width=\\\"100%\\\" style=\\\"margin: 0 auto\\\"/>\\n        *Simulating  multiple layers*\\n        </span>\\n    </div>\\n</div>\\n\\n<p>Which seemed to match the real life knits I made.</p>\\n<span style=\\\"display:block;text-align:center\\\">\\n<img src=\\\"\" + require(\"./images/real_prism.jpg\") + \"\\\" alt=\\\"Label\\\" width=\\\"50%\\\" style=\\\"margin: 0 auto\\\"/>\\n*Knitted \\\"Cube\\\" I made*\\n</span>\\n\\n<h3 id=\\\"building-the-machine\\\">Building the Machine</h3>\\n<p>With an idea of what the final knits would look like, it was onto building the machine itself, which was made up of two separate parts:</p>\\n<ol>\\n<li>An XY Bed powered by an Arduino Mega and RAMPS board</li>\\n<li>An array of needles powered by a Teensy 3.5 board</li>\\n</ol>\\n<span style=\\\"display:block;text-align:center\\\">\\n<img src=\\\"\" + require(\"./images/part-overview.svg\") + \"\\\" alt=\\\"Label\\\" width=\\\"75%\\\" style=\\\"margin: 0 auto\\\"/>\\n</span>\\n\\n<h3 id=\\\"xy-bed\\\">XY Bed</h3>\\n<p>The XY bed was built and assembled by <a href=\\\"https://hcii.cmu.edu/people/scott-hudson\\\">Prof. Scott Hudson</a> from Carnegie Mellon University. Based off a regular 3D printer bed, it's made up of a 80-20 frame driven by an Arduino Mega with a RAMPS board mounted on it. The Arduino Mega controlled most of the movements on the machine with a RAMPS 1.4 board. The RAMPS board was typically meant for building DIY 3D printers, but because of CrochetMatic didn't have a heating element, I had to put two resistors and a potentiometer (a dial) attached to where the heat sensors were supposed to be. This was to trick the board into thinking that there is a heating element on the machine (there isn’t) so that it will use the extruder properly (how the latch servos and the yarn extruder are operated).</p>\\n<h3 id=\\\"needle-array\\\">Needle Array</h3>\\n<p>3D knitting (or Volumetric knitting) was untried while I was working on the project, and the most daunting part was figuring out how to build the needles. The idea was to build an entire &quot;bed&quot; of needles, but what they would look like and how they would work was completely unknown. We couldn't copy them from existing knitting machine needles, which are meant solely for flat 2D planes, but we could use some of the basics of the designs to base how the needles would work. The most helpful was <a href=\\\"https://www.disneyresearch.com/publication/machine-knitting-compiler/\\\">A Compiler for 3D Machine Knitting</a> made in Carnegie Mellon University, which described a way to make knitted 2D shells of 3D forms. The computer simulations provided created a starting point of understanding how the knits would interact with each other.</p>\\n<span style=\\\"display:block;text-align:center\\\">\\n<img src=\\\"\" + require(\"./images/computer_sim.gif\") + \"\\\" alt=\\\"single\\\" width=\\\"70%\\\" style=\\\"margin: 0 auto\\\"/>\\n*Simulation of a single knit on an industry knitting machine from [A Compiler for 3D Machine Knitting](https://www.disneyresearch.com/publication/machine-knitting-compiler/)*\\n</span>\\n\\n<p>The needles for our machine went through multiple iterations, with each version drastically different from the previous versions.</p>\\n<div class=\\\"row\\\">\\n    <div class=\\\"four columns\\\" style=\\\"display:block;text-align:center\\\">\\n        <span style=\\\"display:block;text-align:center\\\">\\n        <img src=\\\"\" + require(\"./images/first_version.svg\") + \"\\\" alt=\\\"Junction\\\" width=\\\"50%\\\" style=\\\"margin: 0 auto\\\"/>\\n        *Initial Needle Design*\\n        </span>\\n    </div>\\n    <div class=\\\"four columns\\\" style=\\\"display:block;text-align:center\\\">\\n        <span style=\\\"display:block;text-align:center\\\">\\n        <img src=\\\"\" + require(\"./images/next_version.svg\") + \"\\\" alt=\\\"Basic\\\" width=\\\"40%\\\" style=\\\"margin: 0 auto\\\"/>\\n        *Needle Design 7.0*\\n        </span>\\n    </div>\\n    <div class=\\\"four columns\\\" style=\\\"display:block;text-align:center\\\">\\n        <span style=\\\"display:block;text-align:center\\\">\\n        <img src=\\\"\" + require(\"./images/final_version.svg\") + \"\\\" alt=\\\"Basic\\\" width=\\\"70%\\\" style=\\\"margin: 0 auto\\\"/>\\n        *Final Version*\\n        </span>\\n    </div>\\n</div>\\n\\n<p>The final needle version required minimal custom parts and instead relied upon off-the-shelf 0.125\\\" and 0.25\\\" diameter aluminum rods nested in one another. The hooks and pushers were 3D printed and manually fitted onto the pipes using force, glue, and rolled-up masking tape. The outer and inner components were each driven by rack-and-pinion mechanism with a motor module. Each module had an SG90 servo motor, which were not only small but also cheap, meaning that each needle could be driven by two motors.</p>\\n<p>Each row would have in total 5 different needles, meaning that there would have to be a total of 10 servo motors driven. The end goal was to eventually have an entire series of these 5 needle rows to built.</p>\\n<span style=\\\"display:block;text-align:center\\\">\\n<img src=\\\"\" + require(\"./images/needle-parts.svg\") + \"\\\" alt=\\\"Label\\\" width=\\\"75%\\\" style=\\\"margin: 0 auto\\\"/>\\n</span>\\n\\n<h3 id=\\\"making-the-knits\\\">Making the Knits</h3>\\n<p>With all these pieces, perhaps the most difficult part of the project was programming the movement of the machine. In most other knitting machines which make knits in two dimensions, this is simpler as the yarn is relatively restricted in where it can go and any knot is pulled either on the left or the right. However, in three dimensions where a single knot can have tension coming from six different sides, it's incredibly difficult to accurately predict how the yarn will behave when something is done to it. </p>\\n<p>After building a unit version of the needle, I made a sequence of motions to create knits by hand and the actuated needle, which you can see below:</p>\\n<span style=\\\"display:block;text-align:center\\\">\\n<img src=\\\"\" + require(\"./images/loop-by-hand.gif\") + \"\\\" alt=\\\"Label\\\" width=\\\"75%\\\" style=\\\"margin: 0 auto\\\"/>\\n*Looping by hand*\\n</span>\\n\\n<p>These motions were turned into the 4 separate steps you see below, which formed the basis of the ultimate sequence for creating knits.</p>\\n<span style=\\\"display:block;text-align:center\\\">\\n<img src=\\\"\" + require(\"./images/steps.svg\") + \"\\\" alt=\\\"Label\\\" width=\\\"100%\\\" style=\\\"margin: 0 auto\\\"/>\\n*Steps to create a knit*\\n</span>\\n\\n<p>However, translating the steps to machine movement was incredibly challenging. Because the XY bed was built using off-the-shelf components meant for 3D printers, the code driving the machine was built off of <a href=\\\"https://www.repetier.com/\\\">Repetier</a>, an existing Arduino-based firmware. That meant that the machine could be moved through gcode, the language used for most existing 3D printers and CNC machines. However, there needed to be a couple modifications to make the firmware work with the motion.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Command</th>\\n<th>Original Definition</th>\\n<th>Modified Definition</th>\\n<th>Usage</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>L</code></td>\\n<td>No <code>L</code> defined in Repetier</td>\\n<td>Selects a needle to be actuated</td>\\n<td><code>L&lt;index of desired needle&gt;</code></td>\\n</tr>\\n<tr>\\n<td><code>E</code></td>\\n<td>Length of material to be extruded</td>\\n<td>Distance that the pusher moves (in mm)</td>\\n<td><code>E&lt;desired distance&gt;</code></td>\\n</tr>\\n<tr>\\n<td><code>Z</code></td>\\n<td>Distance a 3D printer bed goes in Z-direction</td>\\n<td>Distance the hook moves (in mm)</td>\\n<td><code>Z&lt;desired distance&gt;</code></td>\\n</tr>\\n<tr>\\n<td><code>F</code></td>\\n<td>Feed rate for extruder</td>\\n<td>Speed at which the machine moved</td>\\n<td><code>F&lt;desired speed&gt;</code></td>\\n</tr>\\n</tbody></table>\\n<p>Each new command was added or edited in the Commands.cpp file of the Repetier firmware. A Github repo with the modified firmware along with all sorts of other related code can be found <a href=\\\"https://github.com/kevinguo344/CrochetMatic\\\">here</a>.</p>\\n<p>There were also problems ensuring that the servos, which were chosen for their inexpensive price rather than precision, could perform the repicate the exact motion from needle to needle reliably. The solution was to exaggerate the movements of the needle to ensure that each motion would complete its requisite task.</p>\\n<span style=\\\"display:block;text-align:center\\\">\\n<img src=\\\"\" + require(\"./images/row.gif\") + \"\\\" alt=\\\"Label\\\" width=\\\"75%\\\" style=\\\"margin: 0 auto\\\"/>\\n*An early version of the five needle row. Even though the needles are programmed to move identically, the actual movements are far from identical.*\\n</span>\\n\\n<p>In order to plan for how the needle would move, I used the CAM function built into Fusion360 with the simulated CAM tool as a stand-in for the needle, a fixed tube as analog for where the yarn was extruded from, and 2 tilted boxes representing the pushing brushes. </p>\\n<span style=\\\"display:block;text-align:center\\\">\\n<img src=\\\"\" + require(\"./images/CAM-trace.gif\") + \"\\\" alt=\\\"Label\\\" width=\\\"75%\\\" style=\\\"margin: 0 auto\\\"/>\\n*Simulating needle movement in Fusion360*\\n</span>\\n\\n<p>With the toolpaths set, I could output a G-code file from Fusion360, which after further editing and modification, worked with the machine. And all the changes paid off when at the end of May 2018, I was able to make the machine knit a 5-needle wide scarf (almost) entirely without human intervention.</p>\\n<span style=\\\"display:block;text-align:center\\\">\\n<iframe src=\\\"https://drive.google.com/file/d/1NX24JxTp0RCihOpacNhDnv6LlEIOh0n9/preview\\\" width=\\\"640\\\" height=\\\"480\\\"></iframe>\\n*Knitting Machine finally working*\\n</span>\\n\\n<span style=\\\"display:block;text-align:center\\\">\\n<img src=\\\"\" + require(\"./images/scarf.png\") + \"\\\" alt=\\\"Label\\\" width=\\\"50%\\\" style=\\\"margin: 0 auto\\\"/>\\n*The result of a year of work: a scarf*\\n</span>\\n\\n<p>To get to this point required months of work, experimentation and false starts and for CrochetMatic to fully achieve the initial vision of fully volumetric 3D-knitting will require more work. Fortunately, it's currently in the competent hands of <a href=\\\"http://www.xiaoxiangma.ml/\\\">Xiaoxiang Ma</a>, <a href=\\\"https://github.com/aliciaxw\\\">Alicia Wang</a>, and <a href=\\\"http://amritkwatra.com/\\\">Amrit Kwatra</a>.</p>\\n<h3 id=\\\"the-end\\\">The End</h3>\\n\";","module.exports = __webpack_public_path__ + \"static/media/crochetmatic.e3c7114f.png\";","module.exports = __webpack_public_path__ + \"static/media/full-view.76784da0.svg\";","module.exports = __webpack_public_path__ + \"static/media/voxel-single.6c3dfa0d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/basic.83933b43.png\";","module.exports = __webpack_public_path__ + \"static/media/voxel-double.4f8888e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/junction.1229a3d1.png\";","module.exports = __webpack_public_path__ + \"static/media/single_layer.edb51949.gif\";","module.exports = __webpack_public_path__ + \"static/media/multiple_layers.bdf4c92f.gif\";","module.exports = __webpack_public_path__ + \"static/media/real_prism.4c16cf18.jpg\";","module.exports = __webpack_public_path__ + \"static/media/part-overview.bc6eefb7.svg\";","module.exports = __webpack_public_path__ + \"static/media/computer_sim.2cf7d002.gif\";","module.exports = __webpack_public_path__ + \"static/media/first_version.964d0958.svg\";","module.exports = __webpack_public_path__ + \"static/media/next_version.11019e1b.svg\";","module.exports = __webpack_public_path__ + \"static/media/final_version.5c8de141.svg\";","module.exports = __webpack_public_path__ + \"static/media/needle-parts.bbc1f3b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/loop-by-hand.c2db0d23.gif\";","module.exports = __webpack_public_path__ + \"static/media/steps.10dad601.svg\";","module.exports = __webpack_public_path__ + \"static/media/row.b33190b9.gif\";","module.exports = __webpack_public_path__ + \"static/media/CAM-trace.cfbadaf6.gif\";","module.exports = __webpack_public_path__ + \"static/media/scarf.12096cd6.png\";","module.exports = \"<h3 id=\\\"distopia\\\">Distopia</h3>\\n<h6 id=\\\"august-2018-december-2018\\\">August 2018 - December 2018</h6>\\n<h5 id=\\\"people-matt-law-kevin-guo-\\\">People: Matt Law, <strong>Kevin Guo</strong>,</h5>\\n<p>Distopia is an offshoot of the <a href=\\\"http://hrc2.io/projects/Collaborative-Design\\\">Design Assistant project</a> at Prof. Guy Hoffman's <a href=\\\"http://hrc2.io/\\\">Human-Robot Collaboration &amp; Companionship Lab</a>. The goal of Distopia is to build a robotic design assistant that would facilitate the creation of better, fairer voting districts.</p>\\n<h3 id=\\\"why-we-did-it\\\">Why We Did It</h3>\\n<p>In America, Congressional voting districts are determined every 10 years after the US Census. However, drawing the boundaries for these districts are incredibly hard and can be subject to all sorts of manipulation, like gerrymandering. But while an unfair district can be easy to spot, it's hard to say what a fair district is.</p>\\n<p>The law dictates that each district in a state must have roughly the same population and must be continuous (they can&#39;t be made up of separate pieces), but beyond that doesn't provide any other guidelines. There are also other</p>\\n\";","module.exports = \"<h3 id=\\\"transform\\\">transFORM</h3>\\n<h6 id=\\\"january-2019-onwards\\\">January 2019 - Onwards</h6>\\n<span style=\\\"display:block;text-align:center\\\">\\n<img src=\\\"\" + require(\"./images/transFORM.jpg\") + \"\\\" alt=\\\"That's me in that pic\\\" width=\\\"75%\\\" style=\\\"margin: 0 auto\\\"/>\\n*A rendering of transFORM*\\n</span>\\n\\n<p>As part of my Master of Engineering (MEng) in Mechanical Engineering, I will be working on transFORM, a project of Prof. Keith Green's <a href=\\\"https://arl.human.cornell.edu/\\\">Architectural Robotics Lab (ARL)</a>. transFORM is a room-scaled, kirigami-inspired robotic environment for public spaces. For more information, go to the <a href=\\\"https://arl.human.cornell.edu/research-transFORM.html\\\">ARL page on transFORM</a>.</p>\\n<h3 id=\\\"background\\\">Background</h3>\\n<p>I've always been interested in architecture and for my <a href=\\\"https://www.engineering.cornell.edu/students/undergraduate-students/entrepreneurial-options-undergrad-students/kessler-fellows-program\\\">Kessler Fellowship</a> the summer of my junior year, I interned at <a href=\\\"https://oriliving.com/\\\">Ori Inc</a>, an MIT Media Lab spinoff building robotic furniture for urban apartments. During my time at Ori, I became increasingly interested in applying architectural robotics to the public realm. After all, if we could make apartments responsive, couldn't we do the same for a public plaza that was used by all walks of life? That's why I wanted to work on transFORM when I returned to Cornell.</p>\\n<p>This page will get updated as work on transFORM progresses throughout the semester.</p>\\n<h3 id=\\\"come-back-later-for-updates-\\\">Come Back Later for Updates!</h3>\\n\";","module.exports = __webpack_public_path__ + \"static/media/transFORM.4b2b2d68.jpg\";","module.exports = \"<h3 id=\\\"polybrick\\\">Polybrick</h3>\\n<h6 id=\\\"february-2019-onwards\\\">February 2019 - Onwards</h6>\\n<p>For Spring 2019, I am taking <a href=\\\"http://www.jennysabin.com/\\\">Prof. Jenny Sabin's</a> research seminar in Matter Design Computation. As part of the seminar, I will be working on the next version of Polybrick, a project in Prof. Sabin's lab. </p>\\n<h3 id=\\\"background\\\">Background</h3>\\n<p><a href=\\\"http://www.jennysabin.com/polybrick/\\\">Polybrick</a> has already gone through one version previously. This new version of Polybrick is inspired by the microstructures that exists inside bone, with the goal of creating a material that is strong, materially efficient, and has properties not found in regular brick or other existing material. My role will focus on the robotic fabrication aspect of the project, using the Sulla robotic arm and other technologies to explore how to build Polybrick structures.</p>\\n<p>This page will get updated as work on Polybrick progresses throughout the semester.</p>\\n<h3 id=\\\"come-back-later-for-updates-\\\">Come Back Later for Updates!</h3>\\n\";","import React from 'react'\n\nimport './skeleton.css'\nimport './normalize.css'\n\nconst titleCard = {\n\tmarginTop: \"25%\"\n}\n\nexport class Column extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.width = this.stringToNum(this.props.width)\n\t\tif(this.width != null){ this.width += \" columns\"; }\n\t\telse{ this.width = \"column\"; }\n\n\t\tthis.offset = this.stringToNum(this.props.offset);\n\t\tif(this.offset != null){ this.offset =  \" offset-by-\" + this.offset; }\n\t\telse{ this.offset = \"\"; }\n\n\t\tif(this.props.title === \"true\"){ this.style = titleCard; }\n\t}\n\tstringToNum(w){\n\t\tlet a;\n\t\tswitch(w){\n\t\t\tcase \"\":\n\t\t\t\ta = null; break;\n\t\t\tcase \"1/2\":\n\t\t\t\ta = \"half\"; break;\n\t\t\tcase \"1/3\":\n\t\t\t\ta = \"one-third\"; break;\n\t\t\tcase \"2/3\":\n\t\t\t\ta = \"two-thirds\"; break;\n\t\t\tcase \"1\":\n\t\t\t\ta = \"one\"; break;\n\t\t\tcase \"2\":\n\t\t\t\ta = \"two\"; break;\n\t\t\tcase \"3\":\n\t\t\t\ta = \"three\"; break;\n\t\t\tcase \"4\":\n\t\t\t\ta = \"four\"; break;\n\t\t\tcase \"5\":\n\t\t\t\ta = \"five\"; break;\n\t\t\tcase \"6\":\n\t\t\t\ta = \"six\"; break;\n\t\t\tcase \"7\":\n\t\t\t\ta = \"seven\"; break;\n\t\t\tcase \"8\":\n\t\t\t\ta = \"eight\"; break;\n\t\t\tcase \"9\":\n\t\t\t\ta = \"nine\"; break;\n\t\t\tcase \"10\":\n\t\t\t\ta = \"ten\"; break;\n\t\t\tcase \"11\":\n\t\t\t\ta = \"eleven\"; break;\n\t\t\tcase \"12\":\n\t\t\t\ta = \"twelve\"; break;\n\t\t\tdefault:\n\t\t\t\ta = null; break;\n\t\t}\n\t\treturn a;\n\t}\n\trender(){\n        return(\n\t\t\t<div className = {this.width + this.offset} style={this.style}>\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t)\n    }\n}\n\nexport class Container extends React.Component{\n    render(){\n        return(\n\t\t\t<div className = \"container\">\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t)\n    }\n}\n\nexport class Row extends React.Component{\n\trender(){\n\t\treturn(\n\t\t\t<div className = \"row\">\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Row","import React from 'react'\nimport {Column} from './skeleton.jsx';\nimport \"./style.css\";\nimport { Link } from 'react-router-dom';\n\nexport class Tile extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.project = projects[this.props.project];\n\t\tthis.side = this.props.side;\n\t\tthis.style = {\n\t\t\tbackground: \"linear-gradient(to bottom,\" + this.project.color + \",\" + this.project.color + \"), linear-gradient(to bottom, rgba(255,255,255,0.5),rgba(255,255,255,0.5)), url(\" + this.project.img + \")\",\n\t\t\tbackgroundSize: \"cover\"\n\t\t}\n\t}\n\trender(){\n\t\treturn (\n\t\t\t<Link to={\"/\" + this.project.link}>\n\t\t\t\t<Column width=\"6\">\n\t\t\t\t\t<div className={\"titleCard \" + this.side}>\n\t\t\t\t\t\t<div className=\"titleContainer\">\n\t\t\t\t\t\t\t<h2>{this.project.title}</h2>\n\t\t\t\t\t\t\t<h5>{this.project.sub}</h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"background\" style={this.style}></div>\n\t\t\t\t\t</div>\n\t\t\t\t</Column>\n\t\t\t</Link>\n\t\t)\n\t}\n}\n\nlet projects = {\n\troma: {\n\t\ttitle: \"RoMA\",\n\t\tsub: \"Interactive Fabrication in AR\",\n\t\tlink: \"research/roma\",\n\t\timg: \"./assets/icons/roma.svg\",\n\t\tcolor: \"rgba(58,153,215,0.5)\"\n\t},\n\tcrochetmatic: {\n\t\ttitle: \"CrochetMatic\",\n\t\tsub: \"Knitting in 3D\",\n\t\tlink: \"research/crochetmatic\",\n\t\timg: \"./assets/icons/crochetmatic.svg\",\n\t\tcolor: \"rgba(219,80,74,0.5)\"\n\t},\n\tdistopia: {\n\t\ttitle: \"Distopia\",\n\t\tsub: \"Build a Better Voting District\",\n\t\tlink: \"research/distopia\",\n\t\timg: \"./assets/icons/distopia.svg\",\n\t\tcolor: \"rgba(138,201,38,0.5)\"\n\t},\n\ttransform: {\n\t\ttitle: \"transFORM\",\n\t\tsub: \"Responsive Public Environment\",\n\t\tlink: \"research/transform\",\n\t\timg: \"./assets/icons/transform.svg\",\n\t\tcolor: \"rgba(227,181,5,0.5)\"\n\t},\n\tpolybrick: {\n\t\ttitle: \"Polybrick\",\n\t\tsub: \"Building blocks inspired by Nature\",\n\t\tlink: \"research/polybrick\",\n\t\timg: \"./assets/icons/polybrick.svg\",\n\t\tcolor: \"rgba(138,201,38,0.5)\"\n\t},\n\tcuberpillar: {\n\t\ttitle: \"Cuberpillar\",\n\t\tsub: \"Combining the geometric and organic\",\n\t\tlink: \"designs/cuberpillar\",\n\t\timg: \"./assets/icons/roma.png\"\n\t},\n\tocularmd: {\n\t\ttitle: \"OcularMD\",\n\t\tsub: \"Letting the world see again\",\n\t\tlink: \"designs/ocularmd\",\n\t\timg: \"./assets/icons/roma.png\"\n\t},\n\tciac: {\n\t\ttitle: \"CIAC VII\",\n\t\tsub: \"Bringing order to a messy brand\",\n\t\tlink: \"designs/ciac\",\n\t\timg: \"./assets/icons/roma.png\"\n\t},\n\tlcl: {\n\t\ttitle: \"Life Changing Labs\",\n\t\tsub: \"Giving startups a new beginning\",\n\t\tlink: \"designs/lcl\",\n\t\timg: \"./assets/icons/roma.png\"\n\t},\n\tcornellems: {\n\t\ttitle: \"Cornell EMS\",\n\t\tsub: \"Redefining an old stalwart\",\n\t\tlink: \"designs/cornellems\",\n\t\timg: \"./assets/icons/roma.png\"\n\t}\n}\n\nexport default Tile;","import React from 'react'\nimport \"./style.css\";\n\nexport class Page extends React.Component{\n    render(){\n        return(\n\t\t\t<div className = \"pageView\">\n\t\t\t\t<div className = \"pageContainer\">\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n    }\n}\n\nexport default Page;","import React, { Component } from 'react';\nimport {Row, Column, Container} from '../components/skeleton.jsx';\nimport Tile from '../components/titlePiece.jsx';\nimport Page from '../components/pageView.jsx';\nimport MediaQuery from 'react-responsive';\n\nclass Home extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Page>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Column width = \"6\">\n\t\t\t\t\t\t\t<h1><strong>Hi, I'm Kevin</strong></h1>\n\t\t\t\t\t\t\t<p>I'm currently a student Cornell University studying Information Science, Systems, & Technology. I'm also pursuing a Masters of Engineering in Mechanical Engineering focusing on Architectural Robotics. My advisor is <a href=\"https://arl.human.cornell.edu/people_keith.htm\">Prof. Keith Green</a> of the Design + Environmental Analysis (DEA) department.</p>\n\t\t\t\t\t\t\t<p>I'm interested in learning how technology can make design more accessible, useful, and exciting, especially interested in its applications to architecture and the built environment.</p>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t</Row>\n\t\t\t\t</Page>\n\t\t\t\t<Page>\n\t\t\t\t\t<MediaQuery minWidth={550}>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<h2><strong>Research</strong></h2>\n\t\t\t\t\t\t\t<p>My research focuses on the applications of robotics in design, especially in architecture. Of special interest are the design and construction of interactive robotic environments and novel forms of robotic fabrication.</p>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Tile project=\"crochetmatic\" side=\"left\"></Tile>\n\t\t\t\t\t\t\t<Tile project=\"roma\" side=\"left\"></Tile>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Tile project=\"transform\" side=\"right\"></Tile>\n\t\t\t\t\t\t\t<Tile project=\"polybrick\" side=\"right\"></Tile>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</MediaQuery>\n\t\t\t\t\t<MediaQuery maxWidth={550}>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<h1>Research</h1>\n\t\t\t\t\t\t\t<p>My research focuses on the applications of robotics in design, especially in architecture. Of special interest are the design and construction of interactive robotic environments and novel forms of robotic fabrication.</p>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Tile project=\"crochetmatic\" side=\"right\"></Tile>\n\t\t\t\t\t\t\t<Tile project=\"roma\" side=\"left\"></Tile>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Tile project=\"transform\" side=\"right\"></Tile>\n\t\t\t\t\t\t\t<Tile project=\"polybrick\" side=\"left\"></Tile>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</MediaQuery>\n\t\t\t\t</Page>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import React from 'react';\nimport { Row, Column } from './skeleton.jsx';\nimport { Link } from 'react-router-dom'\n\nexport class Navbar extends React.Component{\n\trender(){\n\t\treturn (\n\t\t\t<Row>\n\t\t\t\t<Column width=\"1\">\n\t\t\t\t\t<Link to = \"/\">\n\t\t\t\t\t\t<h2><i class=\"fas fa-angle-double-left\"></i></h2>\n\t\t\t\t\t</Link>\n\t\t\t\t</Column>\n\t\t\t\t<Column width=\"11\">\n\t\t\t\t\t<h2>Kevin Guo</h2>\n\t\t\t\t</Column>\t\t\n\t\t\t</Row>\n\t\t)\n\t}\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport {Row, Column, Container} from './skeleton.jsx';\nimport Navbar from './navbar.jsx';\nimport \"./style.css\";\n\nclass Project extends Component {\n\trender() {\n\t\treturn(\n\t\t\t<Container>\n\t\t\t\t<Navbar></Navbar>\n\t\t\t\t<Row>\n\t\t\t\t\t<Column className=\"projects\" width=\"12\">\n\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t</Column>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n//Markdown example from https://github.com/rahrang/react-markdown-example\n\nexport default Project;\n","import React from 'react';\nimport Project from '../components/project.jsx';\nimport Markdown from 'markdown-to-jsx';\n\nconst roma = require('../markdown/roma.md');\nconst crochetmatic = require('../markdown/crochetmatic.md');\nconst distopia = require('../markdown/distopia.md');\nconst transform = require('../markdown/transform.md');\nconst polybrick = require('../markdown/polybrick.md');\n\nexport const RoMA = () => ( <Project><Markdown>{roma}</Markdown></Project> )\nexport const CrochetMatic = () => ( <Project><Markdown>{crochetmatic}</Markdown></Project> )\nexport const Distopia = () => ( <Project><Markdown>{distopia}</Markdown></Project> )\nexport const TransForm = () => ( <Project><Markdown>{transform}</Markdown></Project> )\nexport const Polybrick = () => ( <Project><Markdown>{polybrick}</Markdown></Project> )\n","import React from 'react'\nimport Project from '../components/project.jsx';\n\nexport const Cuberpillar = () => ( <Project mdFile=\"roma.md\"></Project> )\nexport const OcularMD  = () => ( <Project mdFile=\"roma.md\"></Project> )\nexport const CIAC = () => ( <Project mdFile=\"roma.md\"></Project> )\nexport const LCL = () => ( <Project mdFile=\"roma.md\"></Project> )\nexport const CUEMS = () => ( <Project mdFile=\"roma.md\"></Project> )\n","import React, { Component } from 'react';\nimport Home from './pages/home.jsx';\nimport {RoMA, CrochetMatic, Distopia, TransForm, Polybrick} from './pages/research.jsx';\nimport {Cuberpillar, OcularMD, CIAC, LCL, CUEMS} from './pages/designs.jsx';\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\n\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div>\n\t\t\t\t\t<Route exact path =\"/\" component={Home}></Route>\n\t\t\t\t\t<Route exact path=\"/research/roma\" render={RoMA}></Route>\n\t\t\t\t\t<Route exact path=\"/research/crochetmatic\" component={CrochetMatic}></Route>\n\t\t\t\t\t<Route exact path=\"/research/distopia\" component={Distopia}></Route>\n\t\t\t\t\t<Route exact path=\"/research/transform\" component={TransForm}></Route>\n\t\t\t\t\t<Route exact path=\"/research/polybrick\" component={Polybrick}></Route>\n\t\t\t\t\t<Route exact path=\"/designs/cuberpillar\" render={Cuberpillar}></Route>\n\t\t\t\t\t<Route exact path=\"/designs/ocularmd\" component={OcularMD}></Route>\n\t\t\t\t\t<Route exact path=\"/designs/ciac\" component={CIAC}></Route>\n\t\t\t\t\t<Route exact path=\"/designs/lcl\" component={LCL}></Route>\n\t\t\t\t\t<Route exact path=\"/designs/cuems\" component={CUEMS}></Route>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n//Markdown example from https://github.com/rahrang/react-markdown-example\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}